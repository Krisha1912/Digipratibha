document.addEventListener('DOMContentLoaded', () => {
  // üîê Login Form
  const loginForm = document.querySelector('#login-form');
  if (loginForm) {
    loginForm.addEventListener('submit', (e) => {
      e.preventDefault();
      localStorage.setItem('isLoggedIn', 'true');
      window.location.href = 'index.html';
    });
  }

  // üìù Signup Form
  const signupForm = document.querySelector('#signup-form');
  if (signupForm) {
    signupForm.addEventListener('submit', (e) => {
      e.preventDefault();
      localStorage.setItem('isLoggedIn', 'true');
      window.location.href = 'index.html';
    });
  }

  // üö´ Navigation Access Control
  const navLinks = document.querySelectorAll('.nav-links a');
  const isLoggedInStatus = localStorage.getItem('isLoggedIn') === 'true';
  if (!isLoggedInStatus) {
    navLinks.forEach(link => {
      if (link.textContent.toLowerCase() !== 'home') {
        link.classList.add('disabled');
        link.addEventListener('click', (e) => {
          e.preventDefault();
          alert('Please log in or sign up to access this page.');
        });
      }
    });
  }

  // üåó Theme Toggling (Sun/Moon)
  const themeToggle = document.getElementById('theme-toggle');
  const body = document.body;

  const savedTheme = localStorage.getItem('theme');
  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

  if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
    body.classList.add('dark-mode');
    themeToggle.classList.remove('fa-sun');
    themeToggle.classList.add('fa-moon');
  } else {
    body.classList.add('light-mode');
    themeToggle.classList.remove('fa-moon');
    themeToggle.classList.add('fa-sun');
  }

  themeToggle.addEventListener('click', () => {
    body.classList.toggle('dark-mode');
    if (body.classList.contains('dark-mode')) {
      themeToggle.classList.remove('fa-sun');
      themeToggle.classList.add('fa-moon');
      localStorage.setItem('theme', 'dark');
    } else {
      themeToggle.classList.remove('fa-moon');
      themeToggle.classList.add('fa-sun');
      localStorage.setItem('theme', 'light');
    }
  });
});


 const chatMessages = document.getElementById("chatMessages");
    const suggestions = document.getElementById("suggestions");
    const chatInput = document.getElementById("chatInput");

    function addMessage(text, isBot) {
      const msg = document.createElement("div");
      msg.className = "message " + (isBot ? "bot" : "user");
      msg.innerHTML = `<div class="bubble">${text}</div>`;
      chatMessages.appendChild(msg);
      chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    function clearSuggestions() {
      suggestions.innerHTML = "";
    }

    function showSuggestions(options) {
      clearSuggestions();
      options.forEach(opt => {
        const chip = document.createElement("div");
        chip.className = "chip";
        chip.textContent = opt.label;
        chip.onclick = () => opt.action();
        suggestions.appendChild(chip);
      });
      
      // Add back button
      const backBtn = document.createElement("button");
      backBtn.className = "back-button";
      backBtn.textContent = "‚Üê Back to Main";
      backBtn.onclick = () => showMainMenu();
      suggestions.appendChild(backBtn);
    }

    function showMainMenu() {
      clearSuggestions();
      addMessage("üëã Back to main menu. What do you need help with?", true);
      const mainChips = [
        {label: "üìö Study Help", action: () => handleMainChoice('study help')},
        {label: "üíº Portfolio Builder", action: () => handleMainChoice('portfolio')},
        {label: "‚úçÔ∏è Content Generator", action: () => handleMainChoice('content generator')},
        {label: "ü§ñ Smart Assistant", action: () => handleMainChoice('assistant')}
      ];
      mainChips.forEach(opt => {
        const chip = document.createElement("div");
        chip.className = "chip";
        chip.textContent = opt.label;
        chip.onclick = () => opt.action();
        suggestions.appendChild(chip);
      });
    }

    function copyToClipboard(text) {
      navigator.clipboard.writeText(text).then(() => {
        addMessage("‚úÖ Copied to clipboard!", true);
      });
    }

    function generateContent(type) {
      let content = "";
      let title = "";
      
      switch(type) {
        case 'about':
          title = "üìù About Section Sample";
          content = `I am a passionate and dedicated professional with a strong background in [Your Field]. With [X years] of experience in [specific areas], I have developed expertise in [key skills]. I am committed to continuous learning and growth, always seeking new challenges that allow me to apply my knowledge and contribute meaningfully to projects. My goal is to leverage my skills in [specific domain] to drive innovation and create impactful solutions.

üéØ Customize this by:
‚Ä¢ Replace [Your Field] with your domain (e.g., Software Development, Marketing, etc.)
‚Ä¢ Add your actual experience years
‚Ä¢ Include your specific skills and achievements
‚Ä¢ Mention your career goals and aspirations`;
          break;
          
        case 'objective':
          title = "üéØ Career Objective Samples";
          content = `For Freshers:
"To secure a challenging position in a dynamic organization where I can utilize my skills in [Your Field] and contribute to the company's growth while advancing my career."

For Experienced:
"Seeking a senior position in [Your Domain] where I can apply my [X years] of experience to lead projects, mentor teams, and drive strategic initiatives."

For Career Change:
"To transition into [New Field] by leveraging my transferable skills from [Previous Field] and passion for [New Domain] to contribute effectively to organizational success."`;
          break;
          
        case 'skills':
          title = "üí° Skills Section Ideas";
          content = `Technical Skills:
‚Ä¢ Programming: Python, JavaScript, Java, C++
‚Ä¢ Web Development: HTML, CSS, React, Node.js
‚Ä¢ Database: MySQL, MongoDB, PostgreSQL
‚Ä¢ Tools: Git, Docker, AWS, VS Code

Soft Skills:
‚Ä¢ Communication & Leadership
‚Ä¢ Problem Solving & Critical Thinking
‚Ä¢ Team Collaboration & Project Management
‚Ä¢ Time Management & Adaptability

Domain-Specific:
‚Ä¢ Data Analysis & Visualization
‚Ä¢ UI/UX Design & Prototyping
‚Ä¢ Digital Marketing & SEO
‚Ä¢ Financial Analysis & Reporting

üîß Customize based on your field and experience level!`;
          break;
          
        case 'experience':
          title = "üíº Experience Section Template";
          content = `[Job Title] at [Company Name]
[Start Date] - [End Date/Present]

Key Responsibilities:
‚Ä¢ [Specific task or responsibility #1]
‚Ä¢ [Specific task or responsibility #2]
‚Ä¢ [Specific task or responsibility #3]

Achievements:
‚Ä¢ [Quantifiable achievement with numbers/percentages]
‚Ä¢ [Recognition, awards, or special projects]
‚Ä¢ [Impact you made on the team/company]

For Freshers - Include:
‚Ä¢ Internships, part-time jobs, freelance work
‚Ä¢ Academic projects with real-world applications
‚Ä¢ Volunteer work and leadership roles
‚Ä¢ Relevant coursework and certifications`;
          break;
          
        case 'projects':
          title = "üöÄ Project Description Template";
          content = `Project Name: [Your Project Title]
Duration: [Start - End Date]
Technologies Used: [List of tools/languages]

Description:
[Brief overview of what the project does and its purpose]

Key Features:
‚Ä¢ [Feature 1 with technical details]
‚Ä¢ [Feature 2 with user impact]
‚Ä¢ [Feature 3 with innovation aspects]

Challenges & Solutions:
‚Ä¢ Challenge: [What problem you faced]
  Solution: [How you solved it]

Results/Impact:
‚Ä¢ [Quantifiable results if available]
‚Ä¢ [User feedback or adoption metrics]
‚Ä¢ [What you learned from this project]

GitHub/Demo: [Links if available]`;
          break;
      }
      
      const messageContent = `${title}<div class="generated-content">${content.replace(/\n/g, '<br>')}<br><button class="copy-button" onclick="copyToClipboard(\`${content.replace(/`/g, '\\`')}\`)">üìã Copy Text</button></div>`;
      addMessage(messageContent, true);
    }

    function handleMainChoice(choice) {
      if (choice === "study help") {
        addMessage("üìö You chose Study Help. What do you need?", true);
        showSuggestions([
          {label: "Assignment Assistance", action: () => addMessage("‚úçÔ∏è I can guide you with assignments. Break them into smaller tasks, research thoroughly, and create an outline before writing.", true)},
          {label: "Study Schedule", action: () => addMessage("üìÖ Let's create a study timetable. Allocate time for each subject, include breaks, and review weekly. Use the 80/20 rule: focus 80% on weak areas.", true)},
          {label: "Exam Prep Tips", action: () => addMessage("üìñ Exam Preparation Strategy:<br>‚Ä¢ Review past papers & question patterns<br>‚Ä¢ Create summary notes for quick revision<br>‚Ä¢ Practice time management<br>‚Ä¢ Focus on weak areas first<br>‚Ä¢ Group study for discussion", true)},
          {label: "Research Help", action: () => addMessage("üîç Research Strategy:<br>‚Ä¢ Start with reliable sources (academic databases)<br>‚Ä¢ Take organized notes with citations<br>‚Ä¢ Create an outline before writing<br>‚Ä¢ Use citation management tools<br>‚Ä¢ Fact-check information", true)},
          {label: "Time Management", action: () => addMessage("‚è∞ Time Management Tips:<br>‚Ä¢ Use Pomodoro: 25 min study + 5 min break<br>‚Ä¢ Prioritize tasks using Eisenhower Matrix<br>‚Ä¢ Set specific, achievable daily goals<br>‚Ä¢ Eliminate distractions during study time<br>‚Ä¢ Review and adjust your schedule weekly", true)}
        ]);
      }
      else if (choice === "portfolio") {
        addMessage("üíº You chose Portfolio Builder.", true);
        showSuggestions([
          {label: "Open Portfolio Page", action: () => window.open("generate.html", "_blank")},
          {label: "Portfolio Structure Guide", action: () => addMessage("üìã Essential Portfolio Sections:<br>‚Ä¢ Header (Name, Contact, Professional Photo)<br>‚Ä¢ About/Summary<br>‚Ä¢ Skills<br>‚Ä¢ Experience/Projects<br>‚Ä¢ Education<br>‚Ä¢ Certifications<br>‚Ä¢ Contact Information<br><br>üí° Tip: Keep it clean, professional, and mobile-friendly!", true)},
          {label: "Resume Tips", action: () => addMessage("üìÑ Resume Best Practices:<br>‚Ä¢ Keep it 1-2 pages maximum<br>‚Ä¢ Use action verbs (achieved, developed, managed)<br>‚Ä¢ Quantify achievements with numbers<br>‚Ä¢ Tailor for each job application<br>‚Ä¢ Use consistent formatting<br>‚Ä¢ Proofread for errors<br>‚Ä¢ Include relevant keywords from job description", true)},
          {label: "Portfolio Showcase Ideas", action: () => addMessage("üé® Portfolio Showcase Tips:<br>‚Ä¢ Include 3-5 best projects<br>‚Ä¢ Show process, not just results<br>‚Ä¢ Add live demos and GitHub links<br>‚Ä¢ Use high-quality screenshots<br>‚Ä¢ Explain your role and impact<br>‚Ä¢ Include client/user testimonials<br>‚Ä¢ Keep loading time minimal", true)}
        ]);
      }
      else if (choice === "content generator") {
        addMessage("‚úçÔ∏è Content Generator - Let me help you create professional content!", true);
        showSuggestions([
          {label: "About Section Generator", action: () => generateContent('about')},
          {label: "Career Objective Samples", action: () => generateContent('objective')},
          {label: "Skills Section Ideas", action: () => generateContent('skills')},
          {label: "Experience Template", action: () => generateContent('experience')},
          {label: "Project Description Template", action: () => generateContent('projects')},
          {label: "Cover Letter Tips", action: () => addMessage("üìù Cover Letter Structure:<br>‚Ä¢ Header with your contact info<br>‚Ä¢ Employer's details<br>‚Ä¢ Professional greeting<br>‚Ä¢ Opening: mention specific position<br>‚Ä¢ Body: highlight relevant skills & achievements<br>‚Ä¢ Closing: call to action<br>‚Ä¢ Professional signature<br><br>üí° Tip: Customize for each application!", true)},
          {label: "LinkedIn Summary Help", action: () => addMessage("üíº LinkedIn Summary Tips:<br>‚Ä¢ Start with a strong hook<br>‚Ä¢ Mention your current role/goal<br>‚Ä¢ Highlight key achievements<br>‚Ä¢ Include relevant keywords<br>‚Ä¢ Add personality and passion<br>‚Ä¢ End with a call-to-action<br>‚Ä¢ Use 1st person, conversational tone<br>‚Ä¢ Keep it 3-4 short paragraphs", true)}
        ]);
      }
      else if (choice === "assistant") {
        addMessage("ü§ñ Smart Assistant features:", true);
        showSuggestions([
          {label: "Course Selection", action: () => addMessage("üìò Course Selection Guide:<br>‚Ä¢ Align with career goals<br>‚Ä¢ Check industry demand<br>‚Ä¢ Consider prerequisites<br>‚Ä¢ Look at job market trends<br>‚Ä¢ Read course reviews<br>‚Ä¢ Check instructor credentials<br>‚Ä¢ Consider time commitment", true)},
          {label: "Internship Tips", action: () => addMessage("üí° Internship Success Strategy:<br>‚Ä¢ Apply early (2-3 months ahead)<br>‚Ä¢ Network with professionals<br>‚Ä¢ Build relevant projects<br>‚Ä¢ Prepare for technical interviews<br>‚Ä¢ Follow up after applications<br>‚Ä¢ Leverage college career services<br>‚Ä¢ Consider remote opportunities", true)},
          {label: "Interview Preparation", action: () => addMessage("üéØ Interview Prep Checklist:<br>‚Ä¢ Research the company thoroughly<br>‚Ä¢ Practice common questions<br>‚Ä¢ Prepare STAR method examples<br>‚Ä¢ Have questions ready to ask<br>‚Ä¢ Plan your outfit & route<br>‚Ä¢ Bring extra copies of resume<br>‚Ä¢ Practice good body language<br>‚Ä¢ Follow up with thank-you email", true)},
          {label: "Networking Tips", action: () => addMessage("ü§ù Networking Strategies:<br>‚Ä¢ Attend industry events & meetups<br>‚Ä¢ Join professional associations<br>‚Ä¢ Connect on LinkedIn thoughtfully<br>‚Ä¢ Offer value before asking for help<br>‚Ä¢ Maintain existing connections<br>‚Ä¢ Follow up consistently<br>‚Ä¢ Be authentic and genuine", true)},
          {label: "Scholarships", action: () => addMessage("üéì Scholarship Search Tips:<br>‚Ä¢ Start early, apply to multiple<br>‚Ä¢ Use scholarship search engines<br>‚Ä¢ Check with your college/university<br>‚Ä¢ Look for industry-specific awards<br>‚Ä¢ Meet all eligibility requirements<br>‚Ä¢ Write compelling essays<br>‚Ä¢ Get strong recommendation letters", true)},
          {label: "Goal Setting", action: () => addMessage("üéØ SMART Goal Setting:<br>‚Ä¢ Specific: Clear and well-defined<br>‚Ä¢ Measurable: Track progress<br>‚Ä¢ Achievable: Realistic and attainable<br>‚Ä¢ Relevant: Aligned with bigger picture<br>‚Ä¢ Time-bound: Set deadlines<br><br>üí° Break big goals into small milestones and celebrate progress!", true)}
        ]);
      }
    }

    function sendMessage() {
      const text = chatInput.value.trim();
      if (!text) return;
      addMessage(text, false);
      chatInput.value = "";

      const msg = text.toLowerCase();
      if (msg.includes("study") || msg.includes("assignment") || msg.includes("exam")) {
        handleMainChoice("study help");
      }
      else if (msg.includes("portfolio") || msg.includes("resume")) {
        handleMainChoice("portfolio");
      }
      else if (msg.includes("content") || msg.includes("about") || msg.includes("generate")) {
        handleMainChoice("content generator");
      }
      else if (msg.includes("assistant") || msg.includes("help")) {
        handleMainChoice("assistant");
      }
      else if (msg.includes("hello") || msg.includes("hi")) {
        addMessage("üëã Hello! I'm here to help you with studies and portfolio building. Choose from the options above!", true);
      }
      else {
        addMessage("ü§î I understand you're looking for help. Try selecting one of the options above, or type keywords like 'study', 'portfolio', 'content', or 'assistant' to get started!", true);
      }
    }

    function handleKey(e) {
      if (e.key === "Enter") sendMessage();
    }

     // Navigation Logic
    const loginForm = document.querySelector('#login-form');
    if (loginForm) {
        loginForm.addEventListener('submit', (e) => {
            e.preventDefault();
            localStorage.setItem('isLoggedIn', 'true');
            window.location.href = 'index.html'; 
        });
    }

    const signupForm = document.querySelector('#signup-form');
    if (signupForm) {
        signupForm.addEventListener('submit', (e) => {
            e.preventDefault();
            localStorage.setItem('isLoggedIn', 'true');
            window.location.href = 'index.html';
        });
    }

    const navLinks = document.querySelectorAll('.nav-links a');
    const isLoggedInStatus = localStorage.getItem('isLoggedIn') === 'true';
    if (!isLoggedInStatus) {
        navLinks.forEach(link => {
            if (link.textContent.toLowerCase() !== 'home') {
                link.classList.add('disabled');
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    alert('Please log in or sign up to access this page.');
                });
            }
        });
    }
// Theme Toggling (Sun/Moon)
    const themeToggle = document.getElementById('theme-toggle');
    const body = document.body;

    const savedTheme = localStorage.getItem('theme');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

    if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
        body.classList.add('dark-mode');
        themeToggle.classList.remove('fa-sun');
        themeToggle.classList.add('fa-moon');
    } else {
        body.classList.add('light-mode');
    }

    themeToggle.addEventListener('click', () => {
        body.classList.toggle('dark-mode');
        if (body.classList.contains('dark-mode')) {
            themeToggle.classList.remove('fa-sun');
            themeToggle.classList.add('fa-moon');
            localStorage.setItem('theme', 'dark');
        } else {
            themeToggle.classList.remove('fa-moon');
            themeToggle.classList.add('fa-sun');
            localStorage.setItem('theme', 'light');
        }
    });